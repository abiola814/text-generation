version: '3.8'

services:
  test:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=testing
      - FLASK_CONFIG=testing
        
    env_file:
      - .env

    depends_on:
      - db
    networks:
      - app-network
    command: sh -c "flask db upgrade && python -m pytest"

  # Web application - depends on tests
  web:
    build: .
    restart: always
    ports:
      - "5003:5000"
    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - FLASK_CONFIG=development
    depends_on:
      test:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app:/app/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=text_generator
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: